{"version":3,"sources":["liepin/detect.js","liepin/liepin.js","liepin/krerp.js","liepin/index.js"],"names":["image2Base64","img","ext","canvas","document","createElement","width","height","getContext","drawImage","dataURL","toDataURL","substr","detect","telcode","callback","window","appcode","GM_xmlhttpRequest","method","url","headers","data","encodeURIComponent","responseType","onload","ret","response","status","telnum","msg","replace","console","log","traceId","Date","getTime","toString","Math","random","getResumeDetail","resIdEncode","listComments","cnResIdEncode","enResIdEncode","telNotExistCallback","telExistCallback","curUserhId","existTel","matchTelFromComments","commentList","length","saveComment","usercEncodeId","rcContext","match","location","reload","index","comment","pop","setAccessToken","u","JSON","parse","localStorage","currentUser","GM_setValue","userName","accessToken","search","tel","GM_getValue","code","GM_deleteValue","alert","result","total","detectPhoneAndMark","urlParams","URLSearchParams","get","resume","IMGDetect","$","showName","usercIdEncode","tagText","append","addEventListener","run","host","btn","innerText","click","setTimeout"],"mappings":";AAAgB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACZA,aAAaC,SAAAA,EAAKC,GACVC,IAAAA,EAASC,SAASC,cAAc,UACpCF,EAAOG,MAAQL,EAAIK,MACnBH,EAAOI,OAASN,EAAIM,OACVJ,EAAOK,WAAW,MACxBC,UAAUR,EAAK,EAAG,EAAGA,EAAIK,MAAOL,EAAIM,QACpCG,IAAAA,EAAUP,EAAOQ,UAAU,SAAWT,GAEnCQ,OADPP,EAAS,KACFO,EAAQE,OAAO,KAE1BC,OAAOC,SAAAA,EAASC,GACPC,OAAOC,SAEZC,kBAAkB,CACdC,OAAQ,OACRC,IAAK,sCAELC,QAAS,CACY,cAAA,WAAYL,OAAOC,QACpB,eAAA,oDAEpBK,KAAM,OAAOC,mBAAmBT,GAChCU,aAAc,OACdC,OAAQ,SAACC,GACFA,GAAuB,KAAvBA,EAAIC,SAASC,OAAbF,CAKCG,IAAAA,EAASH,EAAIC,SAASG,IAC1Bf,EAASc,EAAOE,QAAQ,OAAO,IAAIA,QAAQ,MAAO,UAL9CC,QAAQC,IAAIP,EAAIC,SAASG,UA1B7B,QAAA,QAAA;;ACAD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXI,QAAU,WACC,OAAA,IAAIC,MAAOC,UAAUC,WAAWzB,OAAO,GAAG0B,KAAKC,SAASF,WAAWzB,OAAO,EAAG,IAExF4B,gBAAgBC,SAAAA,EAAa1B,GACzBG,kBAAkB,CACdC,OAAQ,OACRC,IAAK,wEAAwE,KAAKc,UAClFb,QAAS,CACW,eAAA,oCACI,mBAAA,kBAExBC,KAAM,iBAAiBmB,EAAY,gBAAgBA,EACnDjB,aAAc,OACdC,OAAQV,KAGhB2B,aAAaC,SAAAA,EAAeC,EAAeC,EAAqBC,GAAkB,IAAA,EAAA,KAC9E5B,kBAAkB,CACdC,OAAQ,OACRC,IAAK,oEAAoE,KAAKc,UAC9Eb,QAAS,CACW,eAAA,oCACI,mBAAA,kBAExBC,KAAM,eAAeqB,EAAc,kBAAkBA,EAAc,kBAAkBC,EAAc,wBACnGpB,aAAc,OACdC,OAAQ,SAACC,GACDJ,IAAAA,EAAOI,EAAIC,SAASL,KACpB,GAACA,EAAKyB,WAAN,CAKAC,IAAAA,EAAW,EAAKC,qBAAqB3B,EAAK4B,aAC1CF,EACAF,EAAiBE,IACRA,GAAY1B,EAAK4B,YAAYC,OAAS,IAC/CN,SARAA,QAahBO,YAAYX,SAAAA,EAAaY,EAAeC,GAC/BA,EAAUC,MAAM,gBAKrBrC,kBAAkB,CACdC,OAAQ,OACRC,IAAK,wDAAwD,KAAKc,UAClEb,QAAS,CACW,eAAA,oCACI,mBAAA,kBAExBC,KAAM,aAAagC,EAAU,2BAA2Bb,EAAY,kBAAkBY,EACtF7B,aAAc,OACdC,OAAQ,SAACC,GACL8B,SAASC,YAdbzB,QAAQC,IAAIqB,EAAU,iCAkB9BL,qBAAqBC,SAAAA,GACZ,IAAA,IAAIQ,EAAQ,EAAGA,EAAQR,EAAYC,OAAQO,IAAS,CAC/CC,IACFjC,EADYwB,EAAYQ,GACVJ,UAAUC,MAAM,gBAC9B7B,GAAAA,EACOA,OAAAA,EAAIkC,SApEZ,QAAA,QAAA;;ACCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXC,eAAgB,WACRC,IAAAA,EAAIC,KAAKC,MAAMC,aAAaC,aAChCC,YAAY,WAAYL,EAAEM,UAC1BD,YAAY,cAAeL,EAAEO,cAGjCC,OAAOC,SAAAA,EAAKxD,GACJqD,IAAAA,EAAWI,YAAY,YACvBH,EAAcG,YAAY,eAC1BH,GAIJnD,kBAAkB,CACdC,OAAQ,OACRC,IAAK,oFAAmF,IAAIe,MAAOC,UACnGf,QAAS,CACW,eAAA,mBACDgD,YAAAA,EACJD,SAAAA,GAEf9C,KAAM,mEAAmEiD,EAAI,yEAC7E/C,aAAc,OACdC,OAAQ,SAACC,GACFA,GAAmB,KAAnBA,EAAIC,SAAS8C,KAGZ,OAFAC,eAAe,oBACfC,MAAM,4BAIV5D,EAASW,EAAIC,SAASiD,OAAOC,YA/B9B,QAAA,QAAA;;ACGf,aAJA,IAAA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,YAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,WAGaC,SAAAA,IACDC,IACAtC,EADY,IAAIuC,gBAAgBxB,SAASc,QACjBW,IAAI,iBAChCjD,QAAQC,IAAIQ,GAELD,EAAAA,QAAAA,gBAAgBC,EAAa,SAACf,GAC7BwD,IAAAA,EAASxD,EAAIC,SAASL,KACnBoB,EAAAA,QAAAA,aAAawC,EAAOvC,cAAeuC,EAAOtC,cAAe,WAExD9B,IAAAA,EAAUqE,EAAUnF,QAAAA,aAAaoF,EAAE,gBAAgB,GAAI,QACjDvE,EAAAA,QAAAA,OAAOC,EAAS,SAACyD,GACnBjB,IAAAA,EAAY4B,EAAOG,SAAU,IAAKd,EAC/BnB,EAAAA,QAAAA,YAAYX,EAAayC,EAAOI,cAAehC,MAE3D,SAACN,GAEMsB,EAAAA,QAAAA,OAAOtB,EAAU,SAAStB,GACxB6D,IAAAA,EAAU,KAEVA,EADD7D,EACW,MAEA,MAGd0D,EAAE,aAAaI,OAAO,iCAAiCD,EAAQ,iBAiC/EvE,OAAOyE,iBAAiB,OA3BfC,WAEFlC,GADHxB,QAAQC,IAAIjB,OAAOC,SACC,4BAAjBuC,SAASmC,MAKTnC,GAAiB,gBAAjBA,SAASmC,KAAuB,CAE3BC,IAAAA,EAAMR,EAAE,gBAAgB,GACxBQ,GAAiB,YAAjBA,EAAIC,UASJ,OARAD,EAAIE,aACJC,WAAW,WAEPX,EAAE,+CAA+CU,QAGjDhB,KACD,KAKPA,UApBMjB,EAAAA,QAAAA,mBAwBuB,GA5DzC","file":"index.js","sourceRoot":"../src","sourcesContent":["export default  {\n    image2Base64(img, ext) {\n        var canvas = document.createElement(\"canvas\");   //创建canvas DOM元素，并设置其宽高和图片一样\n        canvas.width = img.width;\n        canvas.height = img.height;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0, img.width, img.height); //使用画布画图\n        var dataURL = canvas.toDataURL(\"image/\" + ext);  //返回的是一串Base64编码的URL并指定格式\n        canvas = null; //释放\n        return dataURL.substr(23);\n    },\n    detect(telcode, callback) {\n        if (!window.appcode) return;\n\n        GM_xmlhttpRequest({\n            method: \"POST\",\n            url: \"http://gofc.saltbo.cn/detect/number\",\n            // url: \"http://localhost:8080/detect/number\",\n            headers: {\n                \"Authorization\": \"APPCODE \"+ window.appcode,\n                \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"\n            },\n            data: \"src=\"+encodeURIComponent(telcode),\n            responseType: \"json\",\n            onload: (ret)=>{\n                if(ret.response.status != 200){\n                    console.log(ret.response.msg)\n                    return\n                }\n    \n                let telnum = ret.response.msg\n                callback(telnum.replace(/[ ]/g,\"\").replace(/\\n/g, \"\"))\n            }\n        })\n    },\n}","export default {\n    traceId() {\n        return new Date().getTime().toString().substr(4)+Math.random().toString().substr(2, 2)\n    },\n    getResumeDetail(resIdEncode, callback) {\n        GM_xmlhttpRequest({\n            method: \"POST\",\n            url: \"https://h.liepin.com/resumeview/getresumedetailcoreview.json?traceId=\"+this.traceId(),\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            },\n            data: \"res_id_encode=\"+resIdEncode+\"&resIdEncode=\"+resIdEncode,\n            responseType: \"json\",\n            onload: callback\n        })\n    },\n    listComments(cnResIdEncode, enResIdEncode, telNotExistCallback, telExistCallback) {\n        GM_xmlhttpRequest({\n            method: \"POST\",\n            url: \"https://h.liepin.com/resumeview/showcommentnextpage.json?traceId=\"+this.traceId(),\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            },\n            data: \"resIdEncode=\"+cnResIdEncode+\"&cnResIdEncode=\"+cnResIdEncode+\"&enResIdEncode=\"+enResIdEncode+\"&lastId=&lastShareId=\",\n            responseType: \"json\",\n            onload: (ret) => {\n                let data = ret.response.data\n                if (!data.curUserhId) {\n                    telNotExistCallback()\n                    return\n                }\n\n                let existTel = this.matchTelFromComments(data.commentList)\n                if (existTel) {\n                    telExistCallback(existTel)\n                }  else if (!existTel && data.commentList.length < 10) {\n                    telNotExistCallback()\n                }\n            }\n        })\n    },\n    saveComment(resIdEncode, usercEncodeId, rcContext){\n        if (!rcContext.match(/\\b1\\d{10}\\b/g)){\n            console.log(rcContext+\" not contain a mobile number\")\n            return\n        }\n        \n        GM_xmlhttpRequest({\n            method: \"POST\",\n            url: \"https://h.liepin.com/resume/savecomment.json?traceId=\"+this.traceId(),\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            },\n            data: \"rcContext=\"+rcContext+\"&shareFlag=&resIdEncode=\"+resIdEncode+\"&usercEncodeId=\"+usercEncodeId,\n            responseType: \"json\",\n            onload: (ret)=>{\n                location.reload()\n            }\n        })\n    },\n    matchTelFromComments(commentList) {\n        for (let index = 0; index < commentList.length; index++) {\n            const comment = commentList[index];\n            let ret = comment.rcContext.match(/\\b1\\d{10}\\b/g)\n            if (ret) {\n                return ret.pop()\n            }\n        }\n    },\n}","// ERP\nexport default {\n    setAccessToken(){\n        let u = JSON.parse(localStorage.currentUser)\n        GM_setValue(\"userName\", u.userName)\n        GM_setValue(\"accessToken\", u.accessToken)\n    },\n    \n    search(tel, callback){\n        let userName = GM_getValue(\"userName\")\n        let accessToken = GM_getValue(\"accessToken\")\n        if(!accessToken) {\n            return\n        }\n    \n        GM_xmlhttpRequest({\n            method: \"POST\",\n            url: \"https://cts530.careerintlinc.com/cts/v1.0/candidate/web/query/page/es?timestamp=\"+new Date().getTime(),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"accessToken\": accessToken,\n                \"userName\":userName\n            },\n            data: '{\"status\":0,\"stock\":true,\"resumeType\":0,\"searchKeys\":{\"Mobile\":\"'+tel+'\"},\"asc\":true,\"orderByField\":\"\",\"arbitrary\":false,\"limit\":10,\"page\":1}',\n            responseType: \"json\",\n            onload: (ret)=>{\n                if(ret.response.code!=200){\n                    GM_deleteValue(\"accessToken\")\n                    alert(\"ERP未登录或已过期，请登录ERP并刷新任意页面\")\n                    return\n                }\n    \n                callback(ret.response.result.total)\n            }\n        })\n    }\n}","import IMGDetect from './detect'\nimport Liepin from './liepin'\nimport KrERP from './krerp'\n\n(function() {\n    'use strict';\n\n    function detectPhoneAndMark(){\n        let urlParams = new URLSearchParams(location.search);\n        let resIdEncode = urlParams.get(\"res_id_encode\")\n        console.log(resIdEncode)\n    \n        Liepin.getResumeDetail(resIdEncode, (ret)=>{\n            let resume = ret.response.data;\n            Liepin.listComments(resume.cnResIdEncode, resume.enResIdEncode, () => {\n                // 没有备注过的，自动识别手机号码并备注\n                let telcode = IMGDetect.image2Base64($(\".connect-img\")[0], \"jpeg\")\n                IMGDetect.detect(telcode, (tel)=>{\n                    let rcContext = resume.showName +\"：\"+ tel\n                    Liepin.saveComment(resIdEncode, resume.usercIdEncode, rcContext)\n                })\n            }, (existTel) => {\n                // 已经备注过的，显示出入库状态\n                KrERP.search(existTel, function(ret) {\n                    let tagText = \"未知\"\n                    if(ret){\n                        tagText = \"已入库\"\n                    } else {\n                        tagText = \"未入库\"\n                    }\n    \n                    $(\".name-box\").append('<span class=\"user-status-tag\">'+tagText+'</span>')\n                })\n            })\n        });\n    }\n\n    function run() {\n        console.log(window.appcode)\n        if(location.host == \"cts530.careerintlinc.com\"){\n            KrERP.setAccessToken();\n            return\n        }\n\n        if(location.host == \"h.liepin.com\"){\n            // 自动下载简历\n            let btn = $(\".rd-icon-btn\")[0];\n            if (btn.innerText == \"免费下载联系方式\") {\n                btn.click();\n                setTimeout(()=>{\n                    // 关闭弹窗\n                    $(\".hunt-modal-content button.hunt-btn.default\").click();\n\n                    // 识别手机号并备注\n                    detectPhoneAndMark();\n                }, 500)\n                return\n            }\n\n            // 单独处理下载过，但是未备注的情况\n            detectPhoneAndMark();\n        }\n    }\n\n    window.addEventListener('load', run, false);\n})();"]}